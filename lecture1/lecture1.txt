2/3/2021

What is software engineering?
Engineering disipline pertaining to software development, including cost, methodologies etc.. Pretty much just
anything and everything that goes into software development.
Focused on providing engineering methods to software, mostly pertaining to multiple people, big projects

Essential attributes of software products include
Acceptability
dependability and security
efficiency
maintainability

Takes 3 times as much effort to create a programming system as opposed to a program, similarly to a programming product. In a source code program, one does not need to add instructions on how to use the program whereas in a product there needs to be instructions on what it does/how to use.

Programming System Product takes 9 times as much effort due to having to work across different programs in addition to offering it to users

Different flavors of software including business IT, command and control, scientific, gaming, etc..

Software develpment process include
specification (defined and designed)
development (implemented)
validation(tested and released)
evolution(operated and maintained; ultimately retired and revamped)

Up front requirements : Starts with a problem, then moves into requirements specification(25%) and technical specification(25%). Then moves to program code and testing(20%). Finally to a working program/system(30%) which includes day to day maintenance

Lifetime requirements : 10, 15, 10, 20, 45 respectively to ^

The phenomena of technology has evolved over time. In the 90s, hardware was king. Nowadays we have plateud into having to optimize code to be stronger instead of having the most powerful hardware. Hardware paved the way to software.

In 1968, people felt software didn't match the power of hardware. Engineering brought about this discussion in that they applied these engineering principles to computer systems. Less than 15% of projects were on time and on budget. Software engineering was created as a discipline to solve these problems.

Software engineering fundamentals
Use a managed and understood development process
Dependability, security, and performance
One must understand and manage software requirements
REUSE SOFTWWARE THAT HAS ALREADY BEEN DEVELOPED

Software is now the dominant element in all enterprise systems
Because of this, software engineering involves wider responsibilities than simply applying technical skills.
Includes confidentiality, competence, intellectual property rights, and computer misuse

Readings:
sommerville chapters 1 and 19

Python:
P1

Discussions:
Introduce yourself to the class
Ethics for software engineers discussion
